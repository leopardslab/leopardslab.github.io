{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/queries/home.js","webpack:///./src/queries/projects.js"],"names":["HomePage","allMarkdownRemark","homeData","edges","length","node","frontmatter","projectsData","useProjectsPageData","contactInfoData","useContactInfoData","headerSection","headerSecton","aboutSection","projectsSection","projects","contactSection","map","edge","id","MainLayout","SEO","title","mainText","subText","buttonText","buttonLink","image","sideComponent","mediumUrl","small","limit","items","suffle","gitterRoomsListHeading","gitterOrganizationName","gitterToken","mailingListHeading","feedUrl","mailingListFeedUrl"],"mappings":"urIA8EeA,UA5DE,WACf,IChBOC,EDgBDC,GChBCD,EAD4B,OAC5BA,mBAkCkBE,MAAMC,OAAS,EAAIH,EAAkBE,MAAM,GAAGE,KAAKC,YAAc,KDjBpFC,EAAeC,cACfC,EAAkBC,cAElBC,EAAgBT,EAASU,aACzBC,EAAeX,EAASW,aACxBC,EAAkBZ,EAASY,gBAE3BC,GADiBb,EAASc,eACfT,EAAaU,KAAI,SAAAC,GAAI,sBAAOC,GAAID,EAAKb,KAAKc,IAAOD,EAAKb,KAAKC,iBAE5E,OACE,kBAACc,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,MAAM,4BACX,kBAAC,IAAD,CACEC,SAAUZ,EAAcY,SACxBC,QAASb,EAAca,QACvBC,WAAYd,EAAcc,WAC1BC,WAAYf,EAAce,WAC1BC,MAAOhB,EAAcgB,QAEvB,kBAAC,IAAD,CACEL,MAAOT,EAAaS,MACpBC,SAAUV,EAAaU,SACvBK,cACE,kBAAC,IAAD,CACEN,MAAM,kBACNO,UAAWhB,EAAagB,UACxBC,OAAO,EACPC,MAAO,MAIb,kBAAC,IAAD,CACET,MAAOR,EAAgBQ,MACvBU,MAAOjB,EACPgB,MAAO,EACPE,QAAM,IAER,6BACA,kBAAC,IAAD,CACEX,MAAOb,EAAgByB,uBACvBC,uBAAwB1B,EAAgB0B,uBACxCC,YAAa3B,EAAgB2B,cAE/B,kBAAC,IAAD,CACEd,MAAOb,EAAgB4B,mBACvBC,QAAS7B,EAAgB8B,qBAE3B,6BAAM,6BAAM,gC,oFEjEL/B,EAAsB,WAqBjC,OArBuC,OAC/BP,kBAoBiBE,Q","file":"component---src-pages-index-js-8fe921070f158eb4a675.js","sourcesContent":["import React from \"react\"\nimport {useHomePageData} from \"../queries/home\"\nimport {useProjectsPageData} from \"../queries/projects\"\nimport {useContactInfoData} from \"../queries/contactInfo\"\nimport MainLayout from \"../layouts/MainLayout\"\nimport {SEO} from '../components/SEO'\n\n// WEBIU Components\nimport {\n  Header, \n  DescriptionContainer, \n  MediumFeed, \n  ProjectsList, \n  Contact, \n  GitterRoomsList, \n  MailingListFeed \n} from '../../Webiu'\n\nconst HomePage = () => {\n  const homeData = useHomePageData()\n  const projectsData = useProjectsPageData()\n  const contactInfoData = useContactInfoData()\n\n  const headerSection = homeData.headerSecton\n  const aboutSection = homeData.aboutSection\n  const projectsSection = homeData.projectsSection\n  const contactSection = homeData.contactSection\n  const projects = projectsData.map(edge => ({ id: edge.node.id, ...edge.node.frontmatter}))\n\n  return (\n    <MainLayout>\n      <SEO title=\"Leopards Labs Home Page\" />\n      <Header \n        mainText={headerSection.mainText}\n        subText={headerSection.subText}\n        buttonText={headerSection.buttonText}\n        buttonLink={headerSection.buttonLink}\n        image={headerSection.image}\n      />\n      <DescriptionContainer\n        title={aboutSection.title}\n        mainText={aboutSection.mainText}\n        sideComponent={(\n          <MediumFeed \n            title=\"Recent Articles\"\n            mediumUrl={aboutSection.mediumUrl}\n            small={true}\n            limit={3}\n          />\n        )}\n      />\n      <ProjectsList \n        title={projectsSection.title}\n        items={projects}\n        limit={6}\n        suffle\n      />\n      <br />\n      <GitterRoomsList \n        title={contactInfoData.gitterRoomsListHeading}\n        gitterOrganizationName={contactInfoData.gitterOrganizationName}\n        gitterToken={contactInfoData.gitterToken}\n      />\n      <MailingListFeed \n        title={contactInfoData.mailingListHeading}\n        feedUrl={contactInfoData.mailingListFeedUrl}\n      />\n      <br /><br /><br />\n      {/** \n        <Contact \n          contactMessage={contactSection.contactMessage}\n          subscribeMessage={contactSection.subscribeMessage}\n        />\n      */}\n    </MainLayout>\n  )\n}\n\nexport default HomePage\n","import { useStaticQuery, graphql } from \"gatsby\"\n\nexport const useHomePageData = () => {\n  const {allMarkdownRemark} = useStaticQuery (\n    graphql`\n      query HomePageData {\n        allMarkdownRemark(filter: {frontmatter: {template: {eq: \"home\"}}}) {\n          edges {\n            node {\n              id\n              frontmatter {\n                headerSecton {\n                  mainText\n                  subText\n                  buttonText\n                  buttonLink\n                  image\n                }\n                aboutSection {\n                  title\n                  mainText\n                  mediumUrl\n                }\n                projectsSection {\n                  title\n                }\n                contactSection {\n                  contactMessage\n                  subscribeMessage\n                }\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n  return allMarkdownRemark.edges.length > 0 ? allMarkdownRemark.edges[0].node.frontmatter : null\n}","import { useStaticQuery, graphql } from \"gatsby\"\n\nexport const useProjectsPageData = () => {\n  const { allMarkdownRemark } = useStaticQuery (\n    graphql`\n      query ProjectsPageData {\n        allMarkdownRemark(filter: {frontmatter: {template: {eq: \"project\"}}}) {\n          edges {\n            node {\n              id\n              frontmatter {\n                title\n                template\n                description\n                image\n                slug\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n  return allMarkdownRemark.edges\n}"],"sourceRoot":""}